/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: mhart (https://sketchfab.com/mhart)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/landscape-ab5e1ef15ed54b359013e90a95e58714
Title: Landscape
*/

import React, { useEffect, useMemo } from 'react';
import { MeshReflectorMaterial, useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import LandscapeModel from '../../assets/models/landscape.glb';

type GLTFResult = GLTF & {
  nodes: {
    landscape_0: THREE.Mesh;
    landscape_0_1: THREE.Mesh;
    water_0: THREE.Mesh;
    border_0: THREE.Mesh;
  };
  materials: {
    landscape: THREE.MeshStandardMaterial;
    water: THREE.MeshStandardMaterial;
    border: THREE.MeshStandardMaterial;
  };
};

const Landscape = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(LandscapeModel) as GLTFResult;

  const waterMaterial = useMemo(() => {
    return (
      <MeshReflectorMaterial
        transparent
        opacity={0.6}
        color="#23281b"
        roughness={0}
        blur={[10, 10]} // Blur ground reflections (width, height), 0 skips blur
        mixBlur={1} // How much blur mixes with surface roughness (default = 1)
        mixStrength={20} // Strength of the reflections
        mixContrast={1.2} // Contrast of the reflections
        resolution={512} // Off-buffer resolution, lower=faster, higher=better quality, slower
        mirror={0} // Mirror environment, 0 = texture colors, 1 = pick up env colors
        depthScale={0} // Scale the depth factor (0 = no depth, default = 0)
        minDepthThreshold={0} // Lower edge for the depthTexture interpolation (default = 0)
        maxDepthThreshold={0.1} // Upper edge for the depthTexture interpolation (default = 0)
        depthToBlurRatioBias={0.0025} // Adds a bias factor to the depthTexture before calculating the blur amount [blurFactor = blurTexture * (depthTexture + bias)]. It accepts values between 0 and 1, default is 0.25. An amount > 0 of bias makes sure that the blurTexture is not too sharp because of the multiplication with the depthTexture
        reflectorOffset={0.0} // Offsets the virtual camera that projects the reflection. Useful when the reflective surface is some distance from the object's origin (default = 0)
      />
    );
  }, []);

  useEffect(() => {
    const landscapeMat = materials.landscape;
    landscapeMat.envMapIntensity = 0.35;
  }, [materials]);

  return (
    <group {...props} dispose={null} scale={[10, 10, 10]}>
      <group rotation={[-Math.PI / 2, 0, 2]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.landscape_0.geometry}
          material={materials.landscape}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.landscape_0_1.geometry}
          material={materials.landscape}
        />
        <mesh geometry={nodes.water_0.geometry} position={[0, 0, 0.024]}>
          {waterMaterial}
        </mesh>
        <mesh geometry={nodes.border_0.geometry} material={materials.border} />
      </group>
    </group>
  );
};

export { Landscape };

useGLTF.preload(LandscapeModel);
