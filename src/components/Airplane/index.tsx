/* eslint-disable react/no-unknown-property */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Kemal Ã‡olak (https://sketchfab.com/kemalcolak)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/aerobatic-airplane-6bdb6d7c221b463c8943a1d58c13f96f
Title: Aerobatic Airplane
*/

import React, { useRef } from 'react';
import { useFrame } from '@react-three/fiber';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import AirplaneModel from '../../assets/models/airplane.glb';

type GLTFResult = GLTF & {
  nodes: {
    Body_body_0: THREE.Mesh;
    Body_body_front_0: THREE.Mesh;
    Body_whell_black_0: THREE.Mesh;
    Body_body_blue_0: THREE.Mesh;
    Body_cocpit_black_0: THREE.Mesh;
    Engine_body_blue_0: THREE.Mesh;
    Engine_engine_metalic_0: THREE.Mesh;
  };
  materials: {
    body: THREE.MeshStandardMaterial;
    body_front: THREE.MeshStandardMaterial;
    whell_black: THREE.MeshStandardMaterial;
    body_blue: THREE.MeshStandardMaterial;
    cocpit_black: THREE.MeshStandardMaterial;
    engine_metalic: THREE.MeshStandardMaterial;
  };
};

const Airplane = (props: JSX.IntrinsicElements['group']) => {
  const { nodes, materials } = useGLTF(AirplaneModel) as GLTFResult;

  const airplaneRef = useRef<THREE.Group>(null!);
  const helixMeshRef = useRef<THREE.Mesh>(null!);

  useFrame(() => {
    if (helixMeshRef.current) {
      helixMeshRef.current.rotation.x += 0.5;
    }
  });

  return (
    <group
      ref={airplaneRef}
      {...props}
      dispose={null}
      scale={[0.01, 0.01, 0.01]}
      position={[0, 0.5, 0]}
      rotation={[0, 2, 0]}
    >
      <group position={[0.116, -0.132, 0]} rotation={[0, 0, 0.164]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Body_body_0.geometry}
          material={materials.body}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Body_body_front_0.geometry}
          material={materials.body_front}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Body_whell_black_0.geometry}
          material={materials.whell_black}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Body_body_blue_0.geometry}
          material={materials.body_blue}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Body_cocpit_black_0.geometry}
          material={materials.cocpit_black}
        />
      </group>
      <group position={[4.557, 4.488, -0.011]} rotation={[0, 0, 0.3]}>
        <mesh
          ref={helixMeshRef}
          castShadow
          receiveShadow
          geometry={nodes.Engine_body_blue_0.geometry}
          material={materials.body_blue}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Engine_engine_metalic_0.geometry}
          material={materials.engine_metalic}
        />
      </group>
    </group>
  );
};

export { Airplane };

useGLTF.preload(AirplaneModel);
